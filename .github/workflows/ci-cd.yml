name: CI/CD Pipeline

on:
  # push:
  #   branches:
  #     - main
 workflow_dispatch:
env:
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRODUCT_REPO_NAME: test-env
  KUBE_CONFIG_DATA: ${{secrets.KUBE_CONFIG_DATA}}
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # - name: Create .env file
    #   run: |
    #     echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
    #     echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
    #     echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
    #     echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
    #     echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
    
    - name: Clone .env repository
      run: |
        touch .env
        git clone "https://${{ secrets.ENV_REPO_TOKEN }}@${{ secrets.ENV_REPO_URL }}" test-env
        cp test-env/.env .env
        rm -rf test-env

    - name: Run tests
      run: |
        ls -alh

    - name: Run tests
      run: |
        cat .env

    - name: Run tests
      run: |
        python -m unittest discover
    
    - name: Docker login
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Get current commit hash
      id: get_commit_hash
      run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"    

    - name: Build Docker image
      run: |
        docker build . --file Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:${{ steps.get_commit_hash.outputs.commit_hash }}"

    - name: Push Docker image
      run: |
        docker push "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:${{ steps.get_commit_hash.outputs.commit_hash }}"

    - name: Add images
      run: |
        sed -i -e "s#\[IMAGE\]#$DOCKER_USERNAME/$PRODUCT_REPO_NAME:${{ steps.get_commit_hash.outputs.commit_hash}}#g" deployment.yaml
    - name: check file
      run: |
        cat deployment.yaml
 
    - name: Configure kubectl
      run: |
        echo ${{secrets.KUBE_CONFIG_DATA}} | base64 -d > kubeconfig
        mkdir -p ~/.kube
        mv kubeconfig ~/.kube/config

    # - name: Deploy to Kubernetes-secret
    #   run: |
    #     kubectl create secret generic app-secrets --from-env-file=.env

    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl apply -f deployment.yaml --validate=false

